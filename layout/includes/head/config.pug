-
  //- 初始化 Algolia 搜索配置为 'undefined'
  let algolia = 'undefined';
  let env = process.env; //- 获取环境变量
  //- 如果启用了 Algolia 搜索功能
  if (theme.algolia_search.enable) {
    //- 将相关配置转为 JSON 字符串
    algolia = JSON.stringify({
      appId: env.ALGOLIA_APP_ID || config.algolia.appId || config.algolia.applicationID, //- 获取 Algolia 应用 ID
      apiKey: env.ALGOLIA_API_KEY || config.algolia.apiKey, //- 获取 Algolia API 密钥
      indexName: env.ALGOLIA_INDEX_NAME || config.algolia.indexName, //- 获取 Algolia 索引名称
      hits: theme.algolia_search.hits, //- 获取搜索结果显示设置
      //- 搜索语言设置
      languages: {
        input_placeholder: _p("search.algolia_search.input_placeholder"), //- 输入框占位符
        hits_empty: _p("search.algolia_search.hits_empty"), //- 没有搜索结果时的提示
        hits_stats: _p("search.algolia_search.hits_stats"), //- 搜索结果统计信息
      }
    })
  }

  //- 初始化本地搜索配置为 'undefined'
  let localSearch = 'undefined';
  //- 如果启用了本地搜索功能
  if (theme.local_search && theme.local_search.enable) {
    //- 将相关配置转为 JSON 字符串
    localSearch = JSON.stringify({
      path: theme.local_search.CDN ? theme.local_search.CDN : config.root + config.search.path, //- 获取搜索路径
      preload: theme.local_search.preload, //- 预加载设置
      languages: {
        //- 搜索语言设置
        hits_empty: _p("search.local_search.hits_empty"), //- 没有搜索结果时的提示
      }
    })
  }

  //- 初始化翻译功能配置为 'undefined'
  let translate = 'undefined';
  //- 如果启用了翻译功能
  if (theme.translate && theme.translate.enable){
    //- 将相关配置转为 JSON 字符串
    translate = JSON.stringify({
      defaultEncoding: theme.translate.defaultEncoding, //- 默认编码设置
      translateDelay: theme.translate.translateDelay, //- 翻译延迟设置
      msgToTraditionalChinese: theme.translate.msgToTraditionalChinese, //- 繁体中文提示
      msgToSimplifiedChinese: theme.translate.msgToSimplifiedChinese, //- 简体中文提示
      rightMenuMsgToTraditionalChinese: theme.translate.rightMenuMsgToTraditionalChinese, //- 右侧菜单繁体中文提示
      rightMenuMsgToSimplifiedChinese: theme.translate.rightMenuMsgToSimplifiedChinese //- 右侧菜单简体中文提示
    })
  }

  //- 初始化版权设置配置为 'undefined'
  let copyright = 'undefined';
  //- 如果启用了版权功能
  if (theme.copy.enable){
    //- 将相关配置转为 JSON 字符串
    copyright = JSON.stringify({
      copy: theme.copy.enable, //- 是否允许复制
      copyrightEbable: theme.copy.copyright.enable, //- 版权功能启用状态
      limitCount: theme.copy.copyright.limit_count, //- 版权限制计数
      languages: {
        author: _p("copy_copyright.author") + ': ' + config.author, //- 版权作者信息
        link: _p("copy_copyright.link") + ': ', //- 版权链接信息
        source: _p("copy_copyright.source") + ': ' + config.title, //- 版权来源信息
        info: _p("copy_copyright.info"), //- 版权信息提示
        copySuccess: _p("copy_copyright.copySuccess") //- 复制成功提示
      }
    })
  }

  //- 初始化 Snackbar 配置为 'undefined'
  let Snackbar = 'undefined';
  //- 如果启用了 Snackbar 功能
  if (theme.snackbar && theme.snackbar.enable) {
    //- 将相关配置转为 JSON 字符串
    Snackbar = JSON.stringify({
      chs_to_cht: _p("Snackbar.chs_to_cht"), //- 简体转繁体提示
      cht_to_chs: _p("Snackbar.cht_to_chs"), //- 繁体转简体提示
      day_to_night: _p("Snackbar.day_to_night"), //- 日间模式切换提示
      night_to_day: _p("Snackbar.night_to_day"), //- 夜间模式切换提示
      bgLight: theme.snackbar.bg_light, //- 日间背景设置
      bgDark: theme.snackbar.bg_dark, //- 夜间背景设置
      position: theme.snackbar.position, //- Snackbar 显示位置
    })
  }

  //- 初始化过期通知配置为 'undefined'
  let noticeOutdate = 'undefined';
  //- 如果启用了过期通知功能
  if (theme.noticeOutdate && theme.noticeOutdate.enable) {
    //- 将相关配置转为 JSON 字符串
    noticeOutdate = JSON.stringify({
      limitDay: theme.noticeOutdate.limit_day, //- 限制天数
      position: theme.noticeOutdate.position, //- 显示位置
      messagePrev: theme.noticeOutdate.message_prev, //- 上一条消息
      messageNext: theme.noticeOutdate.message_next, //- 下一条消息
    })
  }

  //- 初始化代码高亮配置为 'undefined'
  let highlight = 'undefined';
  let syntaxHighlighter = config.syntax_highlighter; //- 获取语法高亮插件配置
  //- 检查是否启用代码高亮
  let highlightEnable = syntaxHighlighter ? ['highlight.js', 'prismjs'].includes(syntaxHighlighter) : (config.highlight.enable || config.prismjs.enable);
  //- 如果启用了代码高亮
  if (highlightEnable) {
    //- 将相关配置转为 JSON 字符串
    highlight = JSON.stringify({
      plugin: syntaxHighlighter ? syntaxHighlighter : config.highlight.enable ? 'highlight.js' : 'prismjs', //- 选择使用的高亮插件
      highlightCopy: theme.highlight_copy, //- 是否启用高亮复制功能
      highlightLang: theme.highlight_lang, //- 语言高亮设置
      highlightHeightLimit: theme.highlight_height_limit //- 高亮区域高度限制
    })
  }

  //- 初始化好友列表 Vue 配置为 'undefined'
  let friends_vue_info = 'undefined'
  //- 如果启用了好友列表功能
  if (theme.friends_vue && theme.friends_vue.enable) {
    //- 将相关配置转为 JSON 字符串
    friends_vue_info = JSON.stringify({
      apiurl: theme.friends_vue.apiurl //- API 地址
    })
  }

  //- 初始化主音调设置为 'undefined'
  let mainTone = 'undefined'
  //- 如果启用了主音调功能
  if (theme.mainTone && theme.mainTone.enable) {
    //- 将相关配置转为 JSON 字符串
    mainTone = JSON.stringify({
      mode: theme.mainTone.mode, //- 音调模式
      api: theme.mainTone.api, //- API 地址
      cover_change: theme.mainTone.cover_change, //- 封面变化设置
    })
  }

  //- 初始化作者状态设置为 'undefined'
  let authorStatus = 'undefined'
  //- 如果启用了作者状态功能
  if (theme.author_status && theme.author_status.enable) {
    //- 将相关配置转为 JSON 字符串
    authorStatus = JSON.stringify({
      skills: theme.author_status.skills //- 技能信息
    })
  }

  //- 初始化加载器配置为 'undefined'
  let preloader = 'undefined'
  //- 如果启用了加载器功能
  if (theme.preloader && theme.preloader.enable) {
    //- 将相关配置转为 JSON 字符串
    preloader = JSON.stringify({
      source: theme.preloader.source //- 加载器资源地址
    })
  }

  //- 初始化评论弹幕配置为 'undefined'
  let commentBarrageConfig = 'undefined'
  //- 如果启用了评论弹幕功能
  if (theme.comment_barrage_config && theme.comment_barrage_config.enable) {
    //- 将相关配置转为 JSON 字符串
    commentBarrageConfig = JSON.stringify(theme.comment_barrage_config)
  }

  //- 初始化问候框配置为 'undefined'
  let greetingBox = 'undefined'
  //- 如果启用了问候框功能
  if (theme.greetingBox && theme.greetingBox.enable) {
    //- 将相关配置转为 JSON 字符串
    greetingBox = JSON.stringify(theme.greetingBox)
  }

  //- 初始化 LA51 配置为 'undefined'
  let LA51 = 'undefined'
  //- 如果启用了 LA 功能
  if (theme.LA && theme.LA.enable) {
    //- 将相关配置转为 JSON 字符串
    LA51 = JSON.stringify(theme.LA)
  }

  //- 初始化快捷键配置为 'undefined'
  let shortcutKey = 'undefined'
  //- 如果启用了快捷键功能
  if (theme.shortcutKey && theme.shortcutKey.enable) {
    //- 将相关配置转为 JSON 字符串
    shortcutKey = JSON.stringify(theme.shortcutKey)
  }

  //- 初始化自定义标题配置为 'undefined'
  let diytitle = 'undefined'
  //- 如果启用了自定义标题功能
  if (theme.diytitle && theme.diytitle.enable) {
    //- 将相关配置转为 JSON 字符串
    diytitle = JSON.stringify(theme.diytitle)
  }

  //- 初始化文章头部 AI 描述配置为 'undefined'
  let postHeadAiDescription = 'undefined'
  //- 如果启用了文章头部 AI 描述功能
  if (theme.post_head_ai_description && theme.post_head_ai_description.enable) {
    //- 将相关配置转为 JSON 字符串
    postHeadAiDescription = JSON.stringify(theme.post_head_ai_description)
  }

  //- 初始化返回顶部链接配置为 'undefined'
  let linkPageTop = 'undefined'
  //- 如果启用了返回顶部功能
  if (theme.linkPageTop && theme.linkPageTop.enable) {
    //- 将相关配置转为 JSON 字符串
    linkPageTop = JSON.stringify(theme.linkPageTop)
  }

  //- 初始化人像画布配置为 'undefined'
  let peoplecanvas = 'undefined'
  //- 如果启用了人像画布功能
  if (theme.peoplecanvas && theme.peoplecanvas.enable) {
    //- 将相关配置转为 JSON 字符串
    peoplecanvas = JSON.stringify(theme.peoplecanvas)
  }

script.
  //- 定义全局配置对象 GLOBAL_CONFIG
  const GLOBAL_CONFIG = {
    linkPageTop: !{linkPageTop}, //- 返回顶部配置
    peoplecanvas: !{peoplecanvas}, //- 人像画布配置
    postHeadAiDescription: !{postHeadAiDescription}, //- 文章头部 AI 描述配置
    diytitle: !{diytitle}, //- 自定义标题配置
    LA51: !{LA51}, //- LA51 配置
    greetingBox: !{greetingBox}, //- 问候框配置
    twikooEnvId: '!{theme.twikoo.envId}', //- Twikoo 环境 ID
    commentBarrageConfig:!{commentBarrageConfig}, //- 评论弹幕配置
    root: '!{config.root}', //- 根路径
    preloader: !{preloader}, //- 加载器配置
    friends_vue_info: !{friends_vue_info}, //- 好友列表配置
    navMusic: !{theme.nav_music.enable}, //- 导航音乐开关
    mainTone: !{mainTone}, //- 主音调配置
    authorStatus: !{authorStatus}, //- 作者状态配置
    algolia: !{algolia}, //- Algolia 搜索配置
    localSearch: !{localSearch}, //- 本地搜索配置
    translate: !{translate}, //- 翻译配置
    noticeOutdate: !{noticeOutdate}, //- 过期通知配置
    highlight: !{highlight}, //- 代码高亮配置
    copy: { //- 复制相关配置
      success: '!{_p("copy.success")}', //- 复制成功提示
      error: '!{_p("copy.error")}', //- 复制错误提示
      noSupport: '!{_p("copy.noSupport")}' //- 复制不支持提示
    },
    relativeDate: { //- 日期格式相关配置
      homepage: !{theme.post_meta.page.date_format === 'relative'}, //- 首页日期格式
      simplehomepage: !{theme.post_meta.page.date_format === 'simple'}, //- 简单首页日期格式
      post: !{theme.post_meta.post.date_format === 'relative'} //- 文章日期格式
    },
    runtime: '!{theme.runtimeshow.enable ? _p("aside.card_webinfo.runtime.unit") : ""}', //- 运行时间显示
    date_suffix: { //- 日期后缀配置
      just: '!{_p("date_suffix.just")}', //- 刚刚
      min: '!{_p("date_suffix.min")}', //- 分钟
      hour: '!{_p("date_suffix.hour")}', //- 小时
      day: '!{_p("date_suffix.day")}', //- 天
      month: '!{_p("date_suffix.month")}' //- 月
    },
    copyright: !{copyright}, //- 版权设置
    lightbox: '!{ theme.medium_zoom ? "mediumZoom" : (theme.fancybox ? "fancybox" : "null" )}', //- 图片查看器设置
    Snackbar: !{Snackbar}, //- Snackbar 配置
    source: { //- 资源配置
      justifiedGallery: { //- Justified Gallery 配置
        js: '!{url_for(theme.asset.flickr_justified_gallery_js)}', //- JS 文件地址
        css: '!{url_for(theme.asset.flickr_justified_gallery_css)}' //- CSS 文件地址
      }
    },
    isPhotoFigcaption: !{theme.photofigcaption}, //- 是否使用图片说明
    islazyload: !{theme.lazyload.enable}, //- 是否启用懒加载
    isAnchor: !{theme.anchor}, //- 锚点设置
    shortcutKey: !{shortcutKey}, //- 快捷键设置
    autoDarkmode: !{theme.darkmode.enable && theme.darkmode.autoChangeMode === 1} //- 自动暗模式设置
  }

//- 代码功能解释：
//- Algolia 搜索：根据主题配置和环境变量设置 Algolia 搜索相关信息。
//- 本地搜索：根据主题配置设置本地搜索路径和预加载信息。
//- 翻译功能：配置翻译功能相关设置。
//- 版权设置：管理版权信息及其显示。
//- Snackbar：配置提示框的信息与样式。
//- 过期通知：设置过期通知的显示信息。
//- 代码高亮：根据主题设置决定使用的高亮库及相关配置。
//- 好友列表：配置好友列表的 API 地址。
//- 主音调：设置音乐相关的配置。
//- 作者状态：管理作者的技能信息。
//- 加载器：配置页面加载时的动画效果。
//- 评论弹幕：设置评论弹幕的配置。
//- 问候框：管理问候框的显示与内容。
//- LA51、快捷键、DIY标题、文章头部 AI 描述：各自管理其功能的启用与配置。
//- 返回顶部链接、人物画布：设置相关功能的启用与配置。
//- 全局配置：整合所有设置为 GLOBAL_CONFIG 对象，供前端使用。