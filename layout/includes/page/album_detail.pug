#album_detail
  //- 遍历网站数据中的相册
  each i in site.data.album
    //- 判断当前路径是否为相册路径
    - let path_name = (is_current(i.path_name)) ? true : false
    //- 获取相册类型
    - type = i.type
    //- 获取相册的背景图
    - let album_detail_background = i.top_background
    //- 获取相册的顶部链接
    - let album_detail_top_link = i.top_link
    //- 获取相册顶部按钮文本
    - let album_detail_top_btn_text = i.top_btn_text
    
    //- 如果当前路径为相册路径且相册列表存在
    if (path_name && i.album_list)
      .author-content.author-content-item.album.single(style=${album_detail_background ? background: url(${album_detail_background}) top / cover no-repeat; : ""})
        .card-content
          .author-content-item-tips 相册集 //- 显示相册集提示
          span.author-content-item-title=i.class_name //- 显示相册名称
          .content-bottom
            .tips=i.description //- 显示相册描述
          .banner-button-group
            //- 创建跳转按钮，使用 pjax 加载链接
            a.banner-button(onclick=pjax.loadUrl("${url_for(album_detail_top_link ? album_detail_top_link : '/about')}"), data-pjax-state)
              i.anzhiyufont.anzhiyu-icon-arrow-circle-right(style='font-size: 1.5rem') //- 箭头图标
              span.banner-button-text=album_detail_top_btn_text ? album_detail_top_btn_text : "关于我" //- 按钮文本
            
      section.timeline.page-1 //- 相册内容部分
        //- 判断相册类型
        if type == 1
          ul#waterfall.list //- 创建瀑布流布局
            //- 遍历相册列表中的每个项目
            each item, index in i.album_list
              li.album-item
                .album-content
                  p.datacont= item.content //- 显示内容文本
                    //- 如果项目中有图片
                    if item.image
                      .album-container-img
                        //- 遍历每张图片
                        each iten, indey in item.image
                          a.album-content-img(href=item.image[indey], target="_blank", data-fancybox="gallery", data-caption="") //- 图片链接
                            img(src=item.image[indey]) //- 图片元素
                        .album-content-noimg //- 无图片占位
                        .album-content-noimg //- 重复占位
                        .album-content-noimg //- 重复占位
                    //- 如果项目中有音频播放器
                    if item.aplayer
                      .album-music
                        .aplayer.no-destroy(data-id=item.aplayer.id data-server=item.aplayer.server data-type="song" data-order="list" data-preload="none" data-autoplay="false" data-mutex="true" data-theme='var(--anzhiyu-main)') //- 音频播放器
                hr //- 分隔线
                .album-bottom
                  .album-info
                    .album-info-time
                      - var datedata = new Date(item.date).toISOString() //- 将日期格式化为 ISO 格式
                      i.anzhiyufont.anzhiyu-icon-instagram //- Instagram 图标
                      time.datatime(datetime= item.date)= datedata //- 显示格式化的日期
                    //- 如果项目有链接
                    if item.link 
                      a.album-content-link(target="_blank", title="跳转到短文指引的链接", href=item.link, rel="external nofollow") //- 链接元素
                        i.anzhiyufont.anzhiyu-icon-link //- 链接图标
                        | 链接 //- 显示链接文本
                    //- 如果项目有地址
                    if item.address
                      .album-info-address
                        i.anzhiyufont.anzhiyu-icon-location-dot //- 地址图标
                        span=item.address //- 显示地址文本
                    //- 如果项目有来源
                    if item.from 
                      .album-info-from
                          i.anzhiyufont.anzhiyu-icon-fw-fire //- 来源图标
                          span=item.from //- 显示来源文本
                  .album-reply(onclick="rm.rightMenuCommentText(" + '${item.content}' + ")") //- 回复按钮
                    i.anzhiyufont.anzhiyu-icon-message //- 消息图标
        
        //- 如果相册类型为 2
        else if type == 2
          .type-gallery //- 画廊类型的容器
            //- 定义行高，默认为 220
            - const rowHeight = i.rowHeight != "undefined" ? i.rowHeight : 220
            //- 定义最大显示数量，默认为 10
            - const limit = i.limit != "undefined" ? i.limit : 10
            //- 定义是否懒加载，默认为 true
            - const lazyload = i.lazyload != "undefined" ? i.lazyload : true
            //- 定义懒加载类
            - const lazyloadClass = lazyload == true ? "lazyload" : "";
            //- 定义是否显示懒加载按钮
            - const btn = i.btnLazyload != "undefined" ? i.btnLazyload : false
            //- 定义懒加载按钮类
            - const btnLazyloadClass = btn == true ? " btn_album_detail_lazyload" : "";
            //- 定义图片类型
            - const imgType = i.url ? " url" : " data";
            - let dataStr = [] //- 用于存储图片数据的数组
            - let durl = i.url ?? false //- 获取图片 URL
            
            //- 遍历相册列表中的每个项目
            each item, index in i.album_list
              //- 遍历每张图片
              each iten, indey in item.image
                  - let obj = {} //- 创建对象用于存储图片信息
                  - obj.url = iten //- 图片 URL
                  - obj.alt = item.content //- 图片描述
                  - obj.title = item.content //- 图片标题
                  - obj.address = item.address //- 图片地址
                  - dataStr.push(obj) //- 将对象添加到数组中
            
            .gallery
              .fj-gallery(data-rowHeight=rowHeight data-limit=limit class=${lazyloadClass + btnLazyloadClass + imgType}) //- 画廊组件
                //- 如果有数据 URL
                if durl 
                  span.gallery-data=durl //- 显示数据 URL
                else 
                  span.gallery-data=JSON.stringify(dataStr) //- 将数据数组转换为 JSON 字符串并显示
              
              //- 如果需要懒加载按钮
              if btn
                button.gallery-load-more
                  span=_p('load_more') //- 加载更多按钮文本
                  i.anzhiyufont.anzhiyu-icon-arrow-down //- 向下箭头图标
              else 
                #album_detail_gallery_load_more //- 默认加载更多的占位符
